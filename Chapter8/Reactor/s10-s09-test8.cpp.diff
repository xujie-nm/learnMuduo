*** ./s09/test8.cpp	2015-12-29 15:33:31.196000000 +0800
--- ./s10/test8.cpp	2015-12-30 21:50:41.832000000 +0800
***************
*** 5,15 ****
  
  void onConnection(const muduo::TcpConnectionPtr& conn){
      if(conn->connected()){
!         printf("onConnection(): new connection [%s] from %s\n",
                  conn->name().c_str(),
                  conn->peerAddress().toHostPort().c_str());
      }else{
!         printf("onConnection(): connection [%s] is down\n",
                  conn->name().c_str());
      }
  }
--- 5,17 ----
  
  void onConnection(const muduo::TcpConnectionPtr& conn){
      if(conn->connected()){
!         printf("onConnection(): tid=%d new connection [%s] from %s\n",
!                 muduo::CurrentThread::tid(),
                  conn->name().c_str(),
                  conn->peerAddress().toHostPort().c_str());
      }else{
!         printf("onConnection(): tid=%d connection [%s] is down\n",
!                 muduo::CurrentThread::tid(),
                  conn->name().c_str());
      }
  }
***************
*** 17,23 ****
  void onMessage(const muduo::TcpConnectionPtr& conn,
                 muduo::Buffer* buf,
                 muduo::Timestamp receiveTime){
!     printf("onMessage(): received %zd bytes from connection [%s] at %s \n",
              buf->readableBytes(),
              conn->name().c_str(),
              receiveTime.toFormattedString().c_str());
--- 19,26 ----
  void onMessage(const muduo::TcpConnectionPtr& conn,
                 muduo::Buffer* buf,
                 muduo::Timestamp receiveTime){
!     printf("onMessage(): tid=%d received %zd bytes from connection [%s] at %s \n",
!             muduo::CurrentThread::tid(),
              buf->readableBytes(),
              conn->name().c_str(),
              receiveTime.toFormattedString().c_str());
***************
*** 35,40 ****
--- 38,46 ----
      muduo::TcpServer server(&loop, listenAddr, "discard");
      server.setConnectionCallback(onConnection);
      server.setMessageCallback(onMessage);
+     if(argc > 1){
+         server.setThreadNum(atoi(argv[1]));
+     }
      server.start();
  
      loop.loop();
