*** ./s09/test11.cpp	2015-12-30 15:19:59.712094000 +0800
--- ./s10/test11.cpp	2015-12-30 21:58:15.876000000 +0800
***************
*** 7,18 ****
  
  void onConnection(const muduo::TcpConnectionPtr& conn){
      if(conn->connected()){
!         printf("onConnection(): new connection [%s] from %s\n",
                 conn->name().c_str(),
                 conn->peerAddress().toHostPort().c_str());
          conn->send(message);
      }else{
!         printf("onConnection(): connection [%s] is down\n",
                 conn->name().c_str());
      }
  }
--- 7,20 ----
  
  void onConnection(const muduo::TcpConnectionPtr& conn){
      if(conn->connected()){
!         printf("onConnection(): tid=%d new connection [%s] from %s\n",
!                muduo::CurrentThread::tid(),
                 conn->name().c_str(),
                 conn->peerAddress().toHostPort().c_str());
          conn->send(message);
      }else{
!         printf("onConnection(): tid=%d connection [%s] is down\n",
!                muduo::CurrentThread::tid(),
                 conn->name().c_str());
      }
  }
***************
*** 25,31 ****
  void onMessage(const muduo::TcpConnectionPtr& conn,
                 muduo::Buffer* buf,
                 muduo::Timestamp receiveTime){
!     printf("onMessage(): received %zd bytes from connection [%s] at %s\n",
             buf->readableBytes(),
             conn->name().c_str(),
             receiveTime.toFormattedString().c_str());
--- 27,34 ----
  void onMessage(const muduo::TcpConnectionPtr& conn,
                 muduo::Buffer* buf,
                 muduo::Timestamp receiveTime){
!     printf("onMessage(): tid=%d received %zd bytes from connection [%s] at %s\n",
!            muduo::CurrentThread::tid(),
             buf->readableBytes(),
             conn->name().c_str(),
             receiveTime.toFormattedString().c_str());
***************
*** 55,60 ****
--- 58,66 ----
      server.setConnectionCallback(onConnection);
      server.setMessageCallback(onMessage);
      server.setWriteCompleteCallback(onWriteComplete);
+     if(argc > 1){
+         server.setThreadNum(atoi(argv[1]));
+     }
      server.start();
  
      loop.loop();
