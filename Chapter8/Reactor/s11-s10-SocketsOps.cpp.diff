*** ./s10/SocketsOps.cpp	2015-12-30 21:04:32.296000000 +0800
--- ./s11/SocketsOps.cpp	2015-12-31 16:19:45.860000000 +0800
***************
*** 63,68 ****
--- 63,72 ----
      return sockfd;
  }
  
+ int sockets::connect(int sockfd, const struct sockaddr_in& addr){
+     return ::connect(sockfd, sockaddr_cast(&addr), sizeof(addr));
+ }
+ 
  void sockets::bindOrDie(int sockfd, const struct sockaddr_in& addr){
      int ret = ::bind(sockfd, sockaddr_cast(&addr), sizeof addr);
      if(ret < 0){
***************
*** 157,162 ****
--- 161,176 ----
      return localaddr;
  }
  
+ struct sockaddr_in sockets::getPeerAddr(int sockfd){
+     struct sockaddr_in peeraddr;
+     bzero(&peeraddr, sizeof(peeraddr));
+     socklen_t addrlen = sizeof(peeraddr);
+     if(::getpeername(sockfd, sockaddr_cast(&peeraddr), &addrlen) < 0){
+         LOG_SYSERR << "sockets::getPeerAddr";
+     }
+     return peeraddr;
+ }
+ 
  int sockets::getSocketError(int sockfd){
      int optval;
      socklen_t optlen = sizeof(optval);
***************
*** 167,169 ****
--- 181,190 ----
          return optval;
      }
  }
+ 
+ bool sockets::isSelfConnect(int sockfd){
+     struct sockaddr_in localaddr = getLocalAddr(sockfd);
+     struct sockaddr_in peeraddr = getPeerAddr(sockfd);
+     return localaddr.sin_port == peeraddr.sin_port
+         && localaddr.sin_addr.s_addr == peeraddr.sin_addr.s_addr;
+ }
